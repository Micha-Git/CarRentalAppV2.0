// source: api_specification_am_fleet_management.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

// var jspb = require('google-protobuf');
import * as jspb from 'google-protobuf'
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.fleetmanagement.AddCarToFleetRequest', null, global);
goog.exportSymbol('proto.fleetmanagement.AddCarToFleetResponse', null, global);
goog.exportSymbol('proto.fleetmanagement.Car', null, global);
goog.exportSymbol('proto.fleetmanagement.ErrorDetail', null, global);
goog.exportSymbol('proto.fleetmanagement.Fleet', null, global);
goog.exportSymbol('proto.fleetmanagement.ListCarsInFleetRequest', null, global);
goog.exportSymbol('proto.fleetmanagement.ListCarsInFleetResponse', null, global);
goog.exportSymbol('proto.fleetmanagement.RemoveCarFromFleetRequest', null, global);
goog.exportSymbol('proto.fleetmanagement.RemoveCarFromFleetResponse', null, global);
goog.exportSymbol('proto.fleetmanagement.ViewCarInformationRequest', null, global);
goog.exportSymbol('proto.fleetmanagement.ViewCarInformationResponse', null, global);
goog.exportSymbol('proto.fleetmanagement.Vin', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.AddCarToFleetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.AddCarToFleetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.AddCarToFleetRequest.displayName = 'proto.fleetmanagement.AddCarToFleetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.AddCarToFleetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.AddCarToFleetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.AddCarToFleetResponse.displayName = 'proto.fleetmanagement.AddCarToFleetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.ListCarsInFleetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.ListCarsInFleetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.ListCarsInFleetRequest.displayName = 'proto.fleetmanagement.ListCarsInFleetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.ListCarsInFleetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fleetmanagement.ListCarsInFleetResponse.repeatedFields_, null);
};
goog.inherits(proto.fleetmanagement.ListCarsInFleetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.ListCarsInFleetResponse.displayName = 'proto.fleetmanagement.ListCarsInFleetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.RemoveCarFromFleetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.RemoveCarFromFleetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.RemoveCarFromFleetRequest.displayName = 'proto.fleetmanagement.RemoveCarFromFleetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.RemoveCarFromFleetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.RemoveCarFromFleetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.RemoveCarFromFleetResponse.displayName = 'proto.fleetmanagement.RemoveCarFromFleetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.ViewCarInformationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.ViewCarInformationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.ViewCarInformationRequest.displayName = 'proto.fleetmanagement.ViewCarInformationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.ViewCarInformationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.ViewCarInformationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.ViewCarInformationResponse.displayName = 'proto.fleetmanagement.ViewCarInformationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.Vin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.Vin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.Vin.displayName = 'proto.fleetmanagement.Vin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.Car = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.Car, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.Car.displayName = 'proto.fleetmanagement.Car';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.Fleet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fleetmanagement.Fleet.repeatedFields_, null);
};
goog.inherits(proto.fleetmanagement.Fleet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.Fleet.displayName = 'proto.fleetmanagement.Fleet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fleetmanagement.ErrorDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fleetmanagement.ErrorDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fleetmanagement.ErrorDetail.displayName = 'proto.fleetmanagement.ErrorDetail';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.AddCarToFleetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.AddCarToFleetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.AddCarToFleetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.AddCarToFleetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vin: (f = msg.getVin()) && proto.fleetmanagement.Vin.toObject(includeInstance, f),
    fleetid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.AddCarToFleetRequest}
 */
proto.fleetmanagement.AddCarToFleetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.AddCarToFleetRequest;
  return proto.fleetmanagement.AddCarToFleetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.AddCarToFleetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.AddCarToFleetRequest}
 */
proto.fleetmanagement.AddCarToFleetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fleetmanagement.Vin;
      reader.readMessage(value,proto.fleetmanagement.Vin.deserializeBinaryFromReader);
      msg.setVin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFleetid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.AddCarToFleetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.AddCarToFleetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.AddCarToFleetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.AddCarToFleetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVin();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fleetmanagement.Vin.serializeBinaryToWriter
    );
  }
  f = message.getFleetid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Vin vin = 1;
 * @return {?proto.fleetmanagement.Vin}
 */
proto.fleetmanagement.AddCarToFleetRequest.prototype.getVin = function() {
  return /** @type{?proto.fleetmanagement.Vin} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.Vin, 1));
};


/**
 * @param {?proto.fleetmanagement.Vin|undefined} value
 * @return {!proto.fleetmanagement.AddCarToFleetRequest} returns this
*/
proto.fleetmanagement.AddCarToFleetRequest.prototype.setVin = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.AddCarToFleetRequest} returns this
 */
proto.fleetmanagement.AddCarToFleetRequest.prototype.clearVin = function() {
  return this.setVin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.AddCarToFleetRequest.prototype.hasVin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string fleetId = 2;
 * @return {string}
 */
proto.fleetmanagement.AddCarToFleetRequest.prototype.getFleetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.AddCarToFleetRequest} returns this
 */
proto.fleetmanagement.AddCarToFleetRequest.prototype.setFleetid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.fleetmanagement.AddCarToFleetRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.AddCarToFleetRequest} returns this
 */
proto.fleetmanagement.AddCarToFleetRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.AddCarToFleetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.AddCarToFleetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.AddCarToFleetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.AddCarToFleetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    car: (f = msg.getCar()) && proto.fleetmanagement.Car.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.fleetmanagement.ErrorDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.AddCarToFleetResponse}
 */
proto.fleetmanagement.AddCarToFleetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.AddCarToFleetResponse;
  return proto.fleetmanagement.AddCarToFleetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.AddCarToFleetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.AddCarToFleetResponse}
 */
proto.fleetmanagement.AddCarToFleetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fleetmanagement.Car;
      reader.readMessage(value,proto.fleetmanagement.Car.deserializeBinaryFromReader);
      msg.setCar(value);
      break;
    case 2:
      var value = new proto.fleetmanagement.ErrorDetail;
      reader.readMessage(value,proto.fleetmanagement.ErrorDetail.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.AddCarToFleetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.AddCarToFleetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.AddCarToFleetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.AddCarToFleetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCar();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fleetmanagement.Car.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.fleetmanagement.ErrorDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional Car car = 1;
 * @return {?proto.fleetmanagement.Car}
 */
proto.fleetmanagement.AddCarToFleetResponse.prototype.getCar = function() {
  return /** @type{?proto.fleetmanagement.Car} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.Car, 1));
};


/**
 * @param {?proto.fleetmanagement.Car|undefined} value
 * @return {!proto.fleetmanagement.AddCarToFleetResponse} returns this
*/
proto.fleetmanagement.AddCarToFleetResponse.prototype.setCar = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.AddCarToFleetResponse} returns this
 */
proto.fleetmanagement.AddCarToFleetResponse.prototype.clearCar = function() {
  return this.setCar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.AddCarToFleetResponse.prototype.hasCar = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ErrorDetail error = 2;
 * @return {?proto.fleetmanagement.ErrorDetail}
 */
proto.fleetmanagement.AddCarToFleetResponse.prototype.getError = function() {
  return /** @type{?proto.fleetmanagement.ErrorDetail} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.ErrorDetail, 2));
};


/**
 * @param {?proto.fleetmanagement.ErrorDetail|undefined} value
 * @return {!proto.fleetmanagement.AddCarToFleetResponse} returns this
*/
proto.fleetmanagement.AddCarToFleetResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.AddCarToFleetResponse} returns this
 */
proto.fleetmanagement.AddCarToFleetResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.AddCarToFleetResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.ListCarsInFleetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.ListCarsInFleetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.ListCarsInFleetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ListCarsInFleetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fleetid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.ListCarsInFleetRequest}
 */
proto.fleetmanagement.ListCarsInFleetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.ListCarsInFleetRequest;
  return proto.fleetmanagement.ListCarsInFleetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.ListCarsInFleetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.ListCarsInFleetRequest}
 */
proto.fleetmanagement.ListCarsInFleetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFleetid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.ListCarsInFleetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.ListCarsInFleetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.ListCarsInFleetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ListCarsInFleetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFleetid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string fleetId = 1;
 * @return {string}
 */
proto.fleetmanagement.ListCarsInFleetRequest.prototype.getFleetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.ListCarsInFleetRequest} returns this
 */
proto.fleetmanagement.ListCarsInFleetRequest.prototype.setFleetid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fleetmanagement.ListCarsInFleetResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.ListCarsInFleetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.ListCarsInFleetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.ListCarsInFleetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ListCarsInFleetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    carsList: jspb.Message.toObjectList(msg.getCarsList(),
    proto.fleetmanagement.Car.toObject, includeInstance),
    error: (f = msg.getError()) && proto.fleetmanagement.ErrorDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.ListCarsInFleetResponse}
 */
proto.fleetmanagement.ListCarsInFleetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.ListCarsInFleetResponse;
  return proto.fleetmanagement.ListCarsInFleetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.ListCarsInFleetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.ListCarsInFleetResponse}
 */
proto.fleetmanagement.ListCarsInFleetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fleetmanagement.Car;
      reader.readMessage(value,proto.fleetmanagement.Car.deserializeBinaryFromReader);
      msg.addCars(value);
      break;
    case 2:
      var value = new proto.fleetmanagement.ErrorDetail;
      reader.readMessage(value,proto.fleetmanagement.ErrorDetail.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.ListCarsInFleetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.ListCarsInFleetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.ListCarsInFleetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ListCarsInFleetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.fleetmanagement.Car.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.fleetmanagement.ErrorDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Car cars = 1;
 * @return {!Array<!proto.fleetmanagement.Car>}
 */
proto.fleetmanagement.ListCarsInFleetResponse.prototype.getCarsList = function() {
  return /** @type{!Array<!proto.fleetmanagement.Car>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fleetmanagement.Car, 1));
};


/**
 * @param {!Array<!proto.fleetmanagement.Car>} value
 * @return {!proto.fleetmanagement.ListCarsInFleetResponse} returns this
*/
proto.fleetmanagement.ListCarsInFleetResponse.prototype.setCarsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.fleetmanagement.Car=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fleetmanagement.Car}
 */
proto.fleetmanagement.ListCarsInFleetResponse.prototype.addCars = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fleetmanagement.Car, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fleetmanagement.ListCarsInFleetResponse} returns this
 */
proto.fleetmanagement.ListCarsInFleetResponse.prototype.clearCarsList = function() {
  return this.setCarsList([]);
};


/**
 * optional ErrorDetail error = 2;
 * @return {?proto.fleetmanagement.ErrorDetail}
 */
proto.fleetmanagement.ListCarsInFleetResponse.prototype.getError = function() {
  return /** @type{?proto.fleetmanagement.ErrorDetail} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.ErrorDetail, 2));
};


/**
 * @param {?proto.fleetmanagement.ErrorDetail|undefined} value
 * @return {!proto.fleetmanagement.ListCarsInFleetResponse} returns this
*/
proto.fleetmanagement.ListCarsInFleetResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.ListCarsInFleetResponse} returns this
 */
proto.fleetmanagement.ListCarsInFleetResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.ListCarsInFleetResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.RemoveCarFromFleetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.RemoveCarFromFleetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.RemoveCarFromFleetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.RemoveCarFromFleetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vin: (f = msg.getVin()) && proto.fleetmanagement.Vin.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.RemoveCarFromFleetRequest}
 */
proto.fleetmanagement.RemoveCarFromFleetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.RemoveCarFromFleetRequest;
  return proto.fleetmanagement.RemoveCarFromFleetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.RemoveCarFromFleetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.RemoveCarFromFleetRequest}
 */
proto.fleetmanagement.RemoveCarFromFleetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fleetmanagement.Vin;
      reader.readMessage(value,proto.fleetmanagement.Vin.deserializeBinaryFromReader);
      msg.setVin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.RemoveCarFromFleetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.RemoveCarFromFleetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.RemoveCarFromFleetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.RemoveCarFromFleetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVin();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fleetmanagement.Vin.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vin vin = 1;
 * @return {?proto.fleetmanagement.Vin}
 */
proto.fleetmanagement.RemoveCarFromFleetRequest.prototype.getVin = function() {
  return /** @type{?proto.fleetmanagement.Vin} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.Vin, 1));
};


/**
 * @param {?proto.fleetmanagement.Vin|undefined} value
 * @return {!proto.fleetmanagement.RemoveCarFromFleetRequest} returns this
*/
proto.fleetmanagement.RemoveCarFromFleetRequest.prototype.setVin = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.RemoveCarFromFleetRequest} returns this
 */
proto.fleetmanagement.RemoveCarFromFleetRequest.prototype.clearVin = function() {
  return this.setVin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.RemoveCarFromFleetRequest.prototype.hasVin = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.RemoveCarFromFleetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.RemoveCarFromFleetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: (f = msg.getError()) && proto.fleetmanagement.ErrorDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.RemoveCarFromFleetResponse}
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.RemoveCarFromFleetResponse;
  return proto.fleetmanagement.RemoveCarFromFleetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.RemoveCarFromFleetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.RemoveCarFromFleetResponse}
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.fleetmanagement.ErrorDetail;
      reader.readMessage(value,proto.fleetmanagement.ErrorDetail.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.RemoveCarFromFleetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.RemoveCarFromFleetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.fleetmanagement.ErrorDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool result = 1;
 * @return {boolean}
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.prototype.getResult = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fleetmanagement.RemoveCarFromFleetResponse} returns this
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional ErrorDetail error = 2;
 * @return {?proto.fleetmanagement.ErrorDetail}
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.prototype.getError = function() {
  return /** @type{?proto.fleetmanagement.ErrorDetail} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.ErrorDetail, 2));
};


/**
 * @param {?proto.fleetmanagement.ErrorDetail|undefined} value
 * @return {!proto.fleetmanagement.RemoveCarFromFleetResponse} returns this
*/
proto.fleetmanagement.RemoveCarFromFleetResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.RemoveCarFromFleetResponse} returns this
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.RemoveCarFromFleetResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.ViewCarInformationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.ViewCarInformationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.ViewCarInformationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ViewCarInformationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vin: (f = msg.getVin()) && proto.fleetmanagement.Vin.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.ViewCarInformationRequest}
 */
proto.fleetmanagement.ViewCarInformationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.ViewCarInformationRequest;
  return proto.fleetmanagement.ViewCarInformationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.ViewCarInformationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.ViewCarInformationRequest}
 */
proto.fleetmanagement.ViewCarInformationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fleetmanagement.Vin;
      reader.readMessage(value,proto.fleetmanagement.Vin.deserializeBinaryFromReader);
      msg.setVin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.ViewCarInformationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.ViewCarInformationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.ViewCarInformationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ViewCarInformationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVin();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fleetmanagement.Vin.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vin vin = 1;
 * @return {?proto.fleetmanagement.Vin}
 */
proto.fleetmanagement.ViewCarInformationRequest.prototype.getVin = function() {
  return /** @type{?proto.fleetmanagement.Vin} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.Vin, 1));
};


/**
 * @param {?proto.fleetmanagement.Vin|undefined} value
 * @return {!proto.fleetmanagement.ViewCarInformationRequest} returns this
*/
proto.fleetmanagement.ViewCarInformationRequest.prototype.setVin = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.ViewCarInformationRequest} returns this
 */
proto.fleetmanagement.ViewCarInformationRequest.prototype.clearVin = function() {
  return this.setVin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.ViewCarInformationRequest.prototype.hasVin = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.ViewCarInformationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.ViewCarInformationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.ViewCarInformationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ViewCarInformationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    car: (f = msg.getCar()) && proto.fleetmanagement.Car.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.fleetmanagement.ErrorDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.ViewCarInformationResponse}
 */
proto.fleetmanagement.ViewCarInformationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.ViewCarInformationResponse;
  return proto.fleetmanagement.ViewCarInformationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.ViewCarInformationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.ViewCarInformationResponse}
 */
proto.fleetmanagement.ViewCarInformationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fleetmanagement.Car;
      reader.readMessage(value,proto.fleetmanagement.Car.deserializeBinaryFromReader);
      msg.setCar(value);
      break;
    case 2:
      var value = new proto.fleetmanagement.ErrorDetail;
      reader.readMessage(value,proto.fleetmanagement.ErrorDetail.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.ViewCarInformationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.ViewCarInformationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.ViewCarInformationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ViewCarInformationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCar();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fleetmanagement.Car.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.fleetmanagement.ErrorDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional Car car = 1;
 * @return {?proto.fleetmanagement.Car}
 */
proto.fleetmanagement.ViewCarInformationResponse.prototype.getCar = function() {
  return /** @type{?proto.fleetmanagement.Car} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.Car, 1));
};


/**
 * @param {?proto.fleetmanagement.Car|undefined} value
 * @return {!proto.fleetmanagement.ViewCarInformationResponse} returns this
*/
proto.fleetmanagement.ViewCarInformationResponse.prototype.setCar = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.ViewCarInformationResponse} returns this
 */
proto.fleetmanagement.ViewCarInformationResponse.prototype.clearCar = function() {
  return this.setCar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.ViewCarInformationResponse.prototype.hasCar = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ErrorDetail error = 2;
 * @return {?proto.fleetmanagement.ErrorDetail}
 */
proto.fleetmanagement.ViewCarInformationResponse.prototype.getError = function() {
  return /** @type{?proto.fleetmanagement.ErrorDetail} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.ErrorDetail, 2));
};


/**
 * @param {?proto.fleetmanagement.ErrorDetail|undefined} value
 * @return {!proto.fleetmanagement.ViewCarInformationResponse} returns this
*/
proto.fleetmanagement.ViewCarInformationResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.ViewCarInformationResponse} returns this
 */
proto.fleetmanagement.ViewCarInformationResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.ViewCarInformationResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.Vin.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.Vin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.Vin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.Vin.toObject = function(includeInstance, msg) {
  var f, obj = {
    vin: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.Vin}
 */
proto.fleetmanagement.Vin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.Vin;
  return proto.fleetmanagement.Vin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.Vin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.Vin}
 */
proto.fleetmanagement.Vin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.Vin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.Vin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.Vin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.Vin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string vin = 1;
 * @return {string}
 */
proto.fleetmanagement.Vin.prototype.getVin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.Vin} returns this
 */
proto.fleetmanagement.Vin.prototype.setVin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.Car.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.Car.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.Car} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.Car.toObject = function(includeInstance, msg) {
  var f, obj = {
    vin: (f = msg.getVin()) && proto.fleetmanagement.Vin.toObject(includeInstance, f),
    brand: jspb.Message.getFieldWithDefault(msg, 2, ""),
    model: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.Car}
 */
proto.fleetmanagement.Car.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.Car;
  return proto.fleetmanagement.Car.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.Car} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.Car}
 */
proto.fleetmanagement.Car.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fleetmanagement.Vin;
      reader.readMessage(value,proto.fleetmanagement.Vin.deserializeBinaryFromReader);
      msg.setVin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.Car.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.Car.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.Car} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.Car.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVin();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fleetmanagement.Vin.serializeBinaryToWriter
    );
  }
  f = message.getBrand();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Vin vin = 1;
 * @return {?proto.fleetmanagement.Vin}
 */
proto.fleetmanagement.Car.prototype.getVin = function() {
  return /** @type{?proto.fleetmanagement.Vin} */ (
    jspb.Message.getWrapperField(this, proto.fleetmanagement.Vin, 1));
};


/**
 * @param {?proto.fleetmanagement.Vin|undefined} value
 * @return {!proto.fleetmanagement.Car} returns this
*/
proto.fleetmanagement.Car.prototype.setVin = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fleetmanagement.Car} returns this
 */
proto.fleetmanagement.Car.prototype.clearVin = function() {
  return this.setVin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fleetmanagement.Car.prototype.hasVin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string brand = 2;
 * @return {string}
 */
proto.fleetmanagement.Car.prototype.getBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.Car} returns this
 */
proto.fleetmanagement.Car.prototype.setBrand = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string model = 3;
 * @return {string}
 */
proto.fleetmanagement.Car.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.Car} returns this
 */
proto.fleetmanagement.Car.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fleetmanagement.Fleet.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.Fleet.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.Fleet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.Fleet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.Fleet.toObject = function(includeInstance, msg) {
  var f, obj = {
    fleetid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    carsList: jspb.Message.toObjectList(msg.getCarsList(),
    proto.fleetmanagement.Car.toObject, includeInstance),
    location: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fleetmanager: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.Fleet}
 */
proto.fleetmanagement.Fleet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.Fleet;
  return proto.fleetmanagement.Fleet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.Fleet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.Fleet}
 */
proto.fleetmanagement.Fleet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFleetid(value);
      break;
    case 2:
      var value = new proto.fleetmanagement.Car;
      reader.readMessage(value,proto.fleetmanagement.Car.deserializeBinaryFromReader);
      msg.addCars(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFleetmanager(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.Fleet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.Fleet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.Fleet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.Fleet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFleetid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCarsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.fleetmanagement.Car.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFleetmanager();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string fleetId = 1;
 * @return {string}
 */
proto.fleetmanagement.Fleet.prototype.getFleetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.Fleet} returns this
 */
proto.fleetmanagement.Fleet.prototype.setFleetid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Car cars = 2;
 * @return {!Array<!proto.fleetmanagement.Car>}
 */
proto.fleetmanagement.Fleet.prototype.getCarsList = function() {
  return /** @type{!Array<!proto.fleetmanagement.Car>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fleetmanagement.Car, 2));
};


/**
 * @param {!Array<!proto.fleetmanagement.Car>} value
 * @return {!proto.fleetmanagement.Fleet} returns this
*/
proto.fleetmanagement.Fleet.prototype.setCarsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.fleetmanagement.Car=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fleetmanagement.Car}
 */
proto.fleetmanagement.Fleet.prototype.addCars = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.fleetmanagement.Car, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fleetmanagement.Fleet} returns this
 */
proto.fleetmanagement.Fleet.prototype.clearCarsList = function() {
  return this.setCarsList([]);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.fleetmanagement.Fleet.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.Fleet} returns this
 */
proto.fleetmanagement.Fleet.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string fleetManager = 4;
 * @return {string}
 */
proto.fleetmanagement.Fleet.prototype.getFleetmanager = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.Fleet} returns this
 */
proto.fleetmanagement.Fleet.prototype.setFleetmanager = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fleetmanagement.ErrorDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.fleetmanagement.ErrorDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fleetmanagement.ErrorDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ErrorDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    details: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fleetmanagement.ErrorDetail}
 */
proto.fleetmanagement.ErrorDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fleetmanagement.ErrorDetail;
  return proto.fleetmanagement.ErrorDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fleetmanagement.ErrorDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fleetmanagement.ErrorDetail}
 */
proto.fleetmanagement.ErrorDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fleetmanagement.ErrorDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fleetmanagement.ErrorDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fleetmanagement.ErrorDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fleetmanagement.ErrorDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDetails();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.fleetmanagement.ErrorDetail.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.ErrorDetail} returns this
 */
proto.fleetmanagement.ErrorDetail.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string details = 2;
 * @return {string}
 */
proto.fleetmanagement.ErrorDetail.prototype.getDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fleetmanagement.ErrorDetail} returns this
 */
proto.fleetmanagement.ErrorDetail.prototype.setDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.fleetmanagement);
