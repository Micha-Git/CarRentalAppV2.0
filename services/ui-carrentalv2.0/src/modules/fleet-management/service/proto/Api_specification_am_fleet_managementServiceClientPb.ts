/**
 * @fileoverview gRPC-Web generated client stub for fleetmanagement
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v4.25.1
// source: api_specification_am_fleet_management.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as api_specification_am_fleet_management_pb from './api_specification_am_fleet_management_pb'; // proto import: "api_specification_am_fleet_management.proto"


export class FleetServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorAddCarToFleet = new grpcWeb.MethodDescriptor(
    '/fleetmanagement.FleetService/AddCarToFleet',
    grpcWeb.MethodType.UNARY,
    api_specification_am_fleet_management_pb.AddCarToFleetRequest,
    api_specification_am_fleet_management_pb.AddCarToFleetResponse,
    (request: api_specification_am_fleet_management_pb.AddCarToFleetRequest) => {
      return request.serializeBinary();
    },
    api_specification_am_fleet_management_pb.AddCarToFleetResponse.deserializeBinary
  );

  addCarToFleet(
    request: api_specification_am_fleet_management_pb.AddCarToFleetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<api_specification_am_fleet_management_pb.AddCarToFleetResponse>;

  addCarToFleet(
    request: api_specification_am_fleet_management_pb.AddCarToFleetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_specification_am_fleet_management_pb.AddCarToFleetResponse) => void): grpcWeb.ClientReadableStream<api_specification_am_fleet_management_pb.AddCarToFleetResponse>;

  addCarToFleet(
    request: api_specification_am_fleet_management_pb.AddCarToFleetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_specification_am_fleet_management_pb.AddCarToFleetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fleetmanagement.FleetService/AddCarToFleet',
        request,
        metadata || {},
        this.methodDescriptorAddCarToFleet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fleetmanagement.FleetService/AddCarToFleet',
    request,
    metadata || {},
    this.methodDescriptorAddCarToFleet);
  }

  methodDescriptorListCarsInFleet = new grpcWeb.MethodDescriptor(
    '/fleetmanagement.FleetService/ListCarsInFleet',
    grpcWeb.MethodType.UNARY,
    api_specification_am_fleet_management_pb.ListCarsInFleetRequest,
    api_specification_am_fleet_management_pb.ListCarsInFleetResponse,
    (request: api_specification_am_fleet_management_pb.ListCarsInFleetRequest) => {
      return request.serializeBinary();
    },
    api_specification_am_fleet_management_pb.ListCarsInFleetResponse.deserializeBinary
  );

  listCarsInFleet(
    request: api_specification_am_fleet_management_pb.ListCarsInFleetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<api_specification_am_fleet_management_pb.ListCarsInFleetResponse>;

  listCarsInFleet(
    request: api_specification_am_fleet_management_pb.ListCarsInFleetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_specification_am_fleet_management_pb.ListCarsInFleetResponse) => void): grpcWeb.ClientReadableStream<api_specification_am_fleet_management_pb.ListCarsInFleetResponse>;

  listCarsInFleet(
    request: api_specification_am_fleet_management_pb.ListCarsInFleetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_specification_am_fleet_management_pb.ListCarsInFleetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fleetmanagement.FleetService/ListCarsInFleet',
        request,
        metadata || {},
        this.methodDescriptorListCarsInFleet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fleetmanagement.FleetService/ListCarsInFleet',
    request,
    metadata || {},
    this.methodDescriptorListCarsInFleet);
  }

  methodDescriptorRemoveCarFromFleet = new grpcWeb.MethodDescriptor(
    '/fleetmanagement.FleetService/RemoveCarFromFleet',
    grpcWeb.MethodType.UNARY,
    api_specification_am_fleet_management_pb.RemoveCarFromFleetRequest,
    api_specification_am_fleet_management_pb.RemoveCarFromFleetResponse,
    (request: api_specification_am_fleet_management_pb.RemoveCarFromFleetRequest) => {
      return request.serializeBinary();
    },
    api_specification_am_fleet_management_pb.RemoveCarFromFleetResponse.deserializeBinary
  );

  removeCarFromFleet(
    request: api_specification_am_fleet_management_pb.RemoveCarFromFleetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<api_specification_am_fleet_management_pb.RemoveCarFromFleetResponse>;

  removeCarFromFleet(
    request: api_specification_am_fleet_management_pb.RemoveCarFromFleetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_specification_am_fleet_management_pb.RemoveCarFromFleetResponse) => void): grpcWeb.ClientReadableStream<api_specification_am_fleet_management_pb.RemoveCarFromFleetResponse>;

  removeCarFromFleet(
    request: api_specification_am_fleet_management_pb.RemoveCarFromFleetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_specification_am_fleet_management_pb.RemoveCarFromFleetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fleetmanagement.FleetService/RemoveCarFromFleet',
        request,
        metadata || {},
        this.methodDescriptorRemoveCarFromFleet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fleetmanagement.FleetService/RemoveCarFromFleet',
    request,
    metadata || {},
    this.methodDescriptorRemoveCarFromFleet);
  }

}

export class CarServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorViewCarInformation = new grpcWeb.MethodDescriptor(
    '/fleetmanagement.CarService/ViewCarInformation',
    grpcWeb.MethodType.UNARY,
    api_specification_am_fleet_management_pb.ViewCarInformationRequest,
    api_specification_am_fleet_management_pb.ViewCarInformationResponse,
    (request: api_specification_am_fleet_management_pb.ViewCarInformationRequest) => {
      return request.serializeBinary();
    },
    api_specification_am_fleet_management_pb.ViewCarInformationResponse.deserializeBinary
  );

  viewCarInformation(
    request: api_specification_am_fleet_management_pb.ViewCarInformationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<api_specification_am_fleet_management_pb.ViewCarInformationResponse>;

  viewCarInformation(
    request: api_specification_am_fleet_management_pb.ViewCarInformationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_specification_am_fleet_management_pb.ViewCarInformationResponse) => void): grpcWeb.ClientReadableStream<api_specification_am_fleet_management_pb.ViewCarInformationResponse>;

  viewCarInformation(
    request: api_specification_am_fleet_management_pb.ViewCarInformationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_specification_am_fleet_management_pb.ViewCarInformationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fleetmanagement.CarService/ViewCarInformation',
        request,
        metadata || {},
        this.methodDescriptorViewCarInformation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fleetmanagement.CarService/ViewCarInformation',
    request,
    metadata || {},
    this.methodDescriptorViewCarInformation);
  }

}

